# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  workflow_dispatch:
  #push:
  #  branches: [ "master" ]
  #pull_request:
  #  branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    #- uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Set up SQLite
      run: |
        sudo apt-get update -y
        sudo apt-get install sqlite3 -y
      shell: bash

    - name: Run SQLite Script
      run: |
        sqlite3 dist/JaMuz.db < database/JaMuz_creation.sql
      working-directory: ${{ github.workspace }}
    
    - name: Publish Release
      id: publish_release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          target/*.jar
          dist/JaMuz.db 
        tag_name: v1.0  # Use the same tag name created in the previous step
      env:
       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
